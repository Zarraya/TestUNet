<Grid
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d"
	d:DesignWidth="1280" d:DesignHeight="720">
	<Grid.Resources>
		<Geometry x:Key="SelectorExpandGeometry">M2,2L8,2M2,5L8,5M2,8L8,8</Geometry>
		<SolidColorBrush x:Key="GlyphFg" Color="White"/>
		<Color x:Key="ButtonDarkNormalBg">#FF175B97</Color>
		<Color x:Key="ButtonNormalBg">#FF286CA8</Color>
		<Color x:Key="ButtonDarkOverBg">#FF12548F</Color>
		<Color x:Key="ButtonOverBg">#FF2F76B5</Color>
		<Color x:Key="ButtonDarkPressBg">#FF174E7E</Color>
		<Color x:Key="ButtonPressBg">#FF1F629C</Color>
		<Color x:Key="ItemNormalBg">#00286CA8</Color>
		<Color x:Key="ItemOverBg">#40286CA8</Color>
		<Color x:Key="ItemSelectBg">#80286CA8</Color>
		<LinearGradientBrush x:Key="SelectorBg" EndPoint="0.5,1" StartPoint="0.5,0">
			<GradientStop Color="#7F000000" Offset="0"/>
			<GradientStop Color="#4C000000" Offset="1"/>
		</LinearGradientBrush>
		<LinearGradientBrush x:Key="TD_Shadow" EndPoint="0.5,1" StartPoint="0.5,0">
			<GradientStop Color="#59000000" Offset="0"/>
			<GradientStop Color="#00000000" Offset="1"/>
		</LinearGradientBrush>
		<LinearGradientBrush x:Key="DT_Shadow" EndPoint="0.5,1" StartPoint="0.5,0">
			<GradientStop Color="#59000000" Offset="1"/>
			<GradientStop Color="#00000000"/>
		</LinearGradientBrush>
		<LinearGradientBrush x:Key="LR_Shadow" EndPoint="1,0.5" StartPoint="0,0.5">
			<GradientStop Color="#3F000000" Offset="0"/>
			<GradientStop Color="#00000000" Offset="1"/>
		</LinearGradientBrush>
		<ControlTemplate x:Key="SelectorExpandTemplate" TargetType="{x:Type ToggleButton}">
			<Border Margin="0,0,-8,-8" CornerRadius="0,0,8,0" Padding="0,0,8,8">
				<Border.Background>
					<LinearGradientBrush EndPoint="1,1" StartPoint="0,0">
						<GradientStop Color="#00000000" Offset="0.4"/>
						<GradientStop Color="#19000000" Offset="0.7"/>
						<GradientStop Color="#0C000000" Offset="1"/>
					</LinearGradientBrush>
				</Border.Background>
				<VisualStateManager.VisualStateGroups>
					<VisualStateGroup x:Name="CommonStates">
						<VisualStateGroup.Transitions>
							<VisualTransition From="MouseOver" GeneratedDuration="0:0:0.2" To="Normal"/>
							<VisualTransition From="Pressed" GeneratedDuration="0:0:0.2" To="MouseOver"/>
							<VisualTransition From="MouseOver" GeneratedDuration="0:0:0.1" To="Pressed"/>
							<VisualTransition From="Normal" GeneratedDuration="0:0:0.2" To="MouseOver"/>
						</VisualStateGroup.Transitions>
						<VisualState x:Name="Normal"/>
						<VisualState x:Name="MouseOver">
							<Storyboard>
								<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Bd">
									<EasingColorKeyFrame KeyTime="0" Value="{StaticResource ButtonOverBg}"/>
								</ColorAnimationUsingKeyFrames>
							</Storyboard>
						</VisualState>
						<VisualState x:Name="Pressed">
							<Storyboard>
								<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Bd">
									<EasingColorKeyFrame KeyTime="0" Value="{StaticResource ButtonPressBg}"/>
								</ColorAnimationUsingKeyFrames>
							</Storyboard>
						</VisualState>
						<VisualState x:Name="Disabled"/>
					</VisualStateGroup>
				</VisualStateManager.VisualStateGroups>
				<Border x:Name="Bd">
					<Border.Background>
						<SolidColorBrush Color="{StaticResource ButtonNormalBg}"/>
					</Border.Background>
					<ContentPresenter
						HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
						VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
						Margin="{TemplateBinding Padding}"/>
				</Border>
			</Border>
		</ControlTemplate>
		<ControlTemplate x:Key="SelectorTemplate" TargetType="{x:Type TreeView}">
		    <Grid>
		    <Grid Width="{TemplateBinding MinWidth}">
		        <Grid.ColumnDefinitions>
		            <ColumnDefinition Width="*"/>
		            <ColumnDefinition Width="*"/>
		        </Grid.ColumnDefinitions>
		        <Rectangle x:Name="ScrollBarSpace" Grid.Column="0"/>
		    </Grid>
			<ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto"
				MinWidth="{Binding ActualWidth, ElementName=ScrollBarSpace}" MinHeight="{Binding ActualWidth, ElementName=ScrollBarSpace}">
				<StackPanel IsItemsHost="True"/>
			</ScrollViewer>
			</Grid>
		</ControlTemplate>
		<Style x:Key="SelectorStyle" TargetType="{x:Type TreeView}">
			<Setter Property="Foreground" Value="{StaticResource GlyphFg}"/>
			<Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
			<Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
			<Setter Property="Template" Value="{StaticResource SelectorTemplate}"/>
		</Style>
		<ControlTemplate x:Key="SelectorItemExpanderTemplate" TargetType="{x:Type ToggleButton}">
			<Border x:Name="Bd">
				<Border.Background>
					<SolidColorBrush Color="{StaticResource ButtonNormalBg}"/>
				</Border.Background>
				<VisualStateManager.VisualStateGroups>
					<VisualStateGroup x:Name="CommonStates">
						<VisualStateGroup.Transitions>
							<VisualTransition From="Normal" GeneratedDuration="0:0:0.2" To="MouseOver"/>
							<VisualTransition From="MouseOver" GeneratedDuration="0:0:0.2" To="Normal"/>
							<VisualTransition From="MouseOver" GeneratedDuration="0:0:0.1" To="Pressed">
								<Storyboard/>
							</VisualTransition>
							<VisualTransition From="Pressed" GeneratedDuration="0:0:0.2" To="MouseOver"/>
							<VisualTransition From="Pressed" GeneratedDuration="0:0:0.2" To="Normal"/>
						</VisualStateGroup.Transitions>
						<VisualState x:Name="Normal"/>
						<VisualState x:Name="MouseOver">
							<Storyboard>
								<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Bd">
									<EasingColorKeyFrame KeyTime="0" Value="{StaticResource ButtonOverBg}"/>
								</ColorAnimationUsingKeyFrames>
							</Storyboard>
						</VisualState>
						<VisualState x:Name="Pressed">
							<Storyboard>
								<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Bd">
									<EasingColorKeyFrame KeyTime="0" Value="{StaticResource ButtonPressBg}"/>
								</ColorAnimationUsingKeyFrames>
							</Storyboard>
						</VisualState>
						<VisualState x:Name="Disabled"/>
					</VisualStateGroup>
				</VisualStateManager.VisualStateGroups>
			</Border>
		</ControlTemplate>
		<Style x:Key="SelectorItemExpanderStyle" TargetType="{x:Type ToggleButton}">
			<Setter Property="Template" Value="{StaticResource SelectorItemExpanderTemplate}"/>
		</Style>
		<ControlTemplate x:Key="SampleItemTemplate" TargetType="{x:Type TreeViewItem}">
			<Grid>
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto"/>
					<RowDefinition Height="*"/>
				</Grid.RowDefinitions>
				<VisualStateManager.VisualStateGroups>
					<VisualStateGroup x:Name="ExpansionStates">
						<VisualStateGroup.Transitions>
							<VisualTransition From="Collapsed" GeneratedDuration="0:0:0.2" To="Expanded">
								<VisualTransition.GeneratedEasingFunction>
									<SineEase EasingMode="EaseOut"/>
								</VisualTransition.GeneratedEasingFunction>
							</VisualTransition>
							<VisualTransition From="Expanded" GeneratedDuration="0:0:0.2" To="Collapsed">
								<VisualTransition.GeneratedEasingFunction>
									<SineEase EasingMode="EaseOut"/>
								</VisualTransition.GeneratedEasingFunction>
							</VisualTransition>
						</VisualStateGroup.Transitions>
						<VisualState x:Name="Expanded"/>
						<VisualState x:Name="Collapsed">
							<Storyboard>
								<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.LayoutTransform).(ScaleTransform.ScaleY)" Storyboard.TargetName="ItemsHostBd">
									<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
								</DoubleAnimationUsingKeyFrames>
							</Storyboard>
						</VisualState>
					</VisualStateGroup>
					<VisualStateGroup x:Name="HasItemsStates">
						<VisualState x:Name="HasItems">
							<Storyboard>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Expander">
									<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
								</ObjectAnimationUsingKeyFrames>
								<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsHitTestVisible)" Storyboard.TargetName="Bd">
									<DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
								</BooleanAnimationUsingKeyFrames>
								<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="PART_Header">
									<EasingThicknessKeyFrame KeyTime="0" Value="4,6"/>
								</ThicknessAnimationUsingKeyFrames>
							</Storyboard>
						</VisualState>
						<VisualState x:Name="NoItems"/>
					</VisualStateGroup>
				</VisualStateManager.VisualStateGroups>
				<ToggleButton x:Name="Expander" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
					Style="{StaticResource SelectorItemExpanderStyle}" Visibility="Collapsed"/>
				<Border x:Name="Bd" Height="{TemplateBinding MinHeight}">
					<Border.Background>
						<SolidColorBrush Color="{StaticResource ItemNormalBg}"/>
					</Border.Background>
					<Viewbox Stretch="UniformToFill">
						<Grid Width="2000">
							<TextBlock x:Name="PART_Header" Text="{TemplateBinding Header}" Margin="12,7" HorizontalAlignment="Left"/>
						</Grid>
					</Viewbox>
				</Border>
				<Border x:Name="ItemsHostBd" Grid.Row="1" Background="{StaticResource SelectorBg}">
					<Border.LayoutTransform>
						<ScaleTransform/>
					</Border.LayoutTransform>
					<Grid Margin="0,0,0,4">
						<ItemsPresenter x:Name="ItemsHost"/>
						<Rectangle Width="8" HorizontalAlignment="Left">
							<Rectangle.Fill>
								<SolidColorBrush Color="{StaticResource ButtonPressBg}"/>
							</Rectangle.Fill>
						</Rectangle>
						<!--Rectangle Width="8" HorizontalAlignment="Right">
							<Rectangle.Fill>
								<SolidColorBrush Color="{StaticResource ButtonPressBg}"/>
							</Rectangle.Fill>
						</Rectangle-->
					</Grid>
				</Border>
			</Grid>
			<ControlTemplate.Triggers>
				<Trigger Property="IsSelected" Value="True">
					<Setter Property="Background" TargetName="Bd">
						<Setter.Value>
							<SolidColorBrush Color="{DynamicResource ItemSelectBg}"/>
						</Setter.Value>
					</Setter>
				</Trigger>
				<Trigger Property="IsMouseOver" Value="True" SourceName="Bd">
					<Setter Property="Background" TargetName="Bd">
						<Setter.Value>
							<SolidColorBrush Color="{DynamicResource ItemOverBg}"/>
						</Setter.Value>
					</Setter>
				</Trigger>
			</ControlTemplate.Triggers>
		</ControlTemplate>
		<Style x:Key="SampleItemStyle" TargetType="{x:Type TreeViewItem}">
			<Setter Property="Foreground" Value="{StaticResource GlyphFg}"/>
			<Setter Property="Template" Value="{StaticResource SampleItemTemplate}"/>
		</Style>
		<ControlTemplate x:Key="SelectorComboExpanderTemplate" TargetType="{x:Type ToggleButton}">
			<Border x:Name="Bd">
				<Border.Background>
					<SolidColorBrush Color="{StaticResource ButtonDarkNormalBg}"/>
				</Border.Background>
				<VisualStateManager.VisualStateGroups>
					<VisualStateGroup x:Name="CommonStates">
						<VisualStateGroup.Transitions>
							<VisualTransition From="Normal" GeneratedDuration="0:0:0.2" To="MouseOver"/>
							<VisualTransition From="MouseOver" GeneratedDuration="0:0:0.2" To="Normal"/>
							<VisualTransition From="MouseOver" GeneratedDuration="0:0:0.1" To="Pressed">
								<Storyboard/>
							</VisualTransition>
							<VisualTransition From="Pressed" GeneratedDuration="0:0:0.2" To="MouseOver"/>
							<VisualTransition From="Pressed" GeneratedDuration="0:0:0.2" To="Normal"/>
						</VisualStateGroup.Transitions>
						<VisualState x:Name="Normal"/>
						<VisualState x:Name="MouseOver">
							<Storyboard>
								<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Bd">
									<EasingColorKeyFrame KeyTime="0" Value="{StaticResource ButtonDarkOverBg}"/>
								</ColorAnimationUsingKeyFrames>
							</Storyboard>
						</VisualState>
						<VisualState x:Name="Pressed">
							<Storyboard>
								<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Bd">
									<EasingColorKeyFrame KeyTime="0" Value="{StaticResource ButtonDarkPressBg}"/>
								</ColorAnimationUsingKeyFrames>
							</Storyboard>
						</VisualState>
						<VisualState x:Name="Disabled"/>
					</VisualStateGroup>
				</VisualStateManager.VisualStateGroups>
			</Border>
		</ControlTemplate>
		<Style x:Key="SelectorComboExpanderStyle" TargetType="{x:Type ToggleButton}">
			<Setter Property="Template" Value="{StaticResource SelectorComboExpanderTemplate}"/>
		</Style>
		<ControlTemplate x:Key="StyleSelectorTemplate" TargetType="{x:Type ComboBox}">
			<ControlTemplate.Resources>
				<Storyboard x:Key="OnDropDown">
					<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="ExpanderArrow">
						<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="2"/>
						<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
							<EasingDoubleKeyFrame.EasingFunction>
								<SineEase EasingMode="EaseOut"/>
							</EasingDoubleKeyFrame.EasingFunction>
						</EasingDoubleKeyFrame>
					</DoubleAnimationUsingKeyFrames>
					<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="StyleIcon">
						<EasingColorKeyFrame KeyTime="0:0:0.1" Value="#FF90CFFF"/>
					</ColorAnimationUsingKeyFrames>
				</Storyboard>
				<Storyboard x:Key="OnDropUp">
					<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="StyleIcon">
						<EasingColorKeyFrame KeyTime="0:0:0.3" Value="White">
							<EasingColorKeyFrame.EasingFunction>
								<SineEase EasingMode="EaseOut"/>
							</EasingColorKeyFrame.EasingFunction>
						</EasingColorKeyFrame>
					</ColorAnimationUsingKeyFrames>
				</Storyboard>
			</ControlTemplate.Resources>
			<Grid Height="{TemplateBinding MinHeight}">
				<ToggleButton x:Name="Expander" IsChecked="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
					Style="{StaticResource SelectorComboExpanderStyle}"/>
				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto"/>
						<ColumnDefinition/>
					</Grid.ColumnDefinitions>
					<Border Grid.Column="0" IsHitTestVisible="False">
						<Viewbox>
							<Path x:Name="StyleIcon" Data="M0,0L4,0 4,4 0,4zM6,3L20,3 20,4 6,4z M4,6L8,6 8,10 4,10zM10,9L20,9 20,10 10,10zM4,12L8,12 8,16 4,16M10,15L20,15 20,16 10,16z"
							 Fill="White" Margin="6,14,4,14"/>
						</Viewbox>
					</Border>
					<Border Grid.Column="1" IsHitTestVisible="False">
						<Viewbox Stretch="UniformToFill">
							<Grid Width="2000">
								<TextBlock Text="{TemplateBinding SelectionBoxItem}" Margin="4,6"/>
							</Grid>
						</Viewbox>
					</Border>
				</Grid>
				<Border IsHitTestVisible="False" HorizontalAlignment="Right" Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}">
					<Viewbox>
						<Path x:Name="ExpanderArrow" Data="M3,4L5,7 7,4" Stroke="{StaticResource GlyphFg}" Stretch="None" Width="10" Height="10" Margin="1" StrokeStartLineCap="Round" StrokeEndLineCap="Round" StrokeLineJoin="Round" RenderTransformOrigin="0.5,0.5">
							<Path.RenderTransform>
								<TransformGroup>
									<ScaleTransform/>
									<SkewTransform/>
									<RotateTransform/>
									<TranslateTransform/>
								</TransformGroup>
							</Path.RenderTransform>
						</Path>
					</Viewbox>
				</Border>
				<Popup IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" AllowsTransparency="True">
					<Grid Width="{Binding ActualWidth, ElementName=Expander}">
						<Border Margin="0,0,0,8">
							<Border.Background>
								<SolidColorBrush Color="{StaticResource ButtonNormalBg}"/>
							</Border.Background>
						</Border>
						<StackPanel Background="{StaticResource SelectorBg}" IsItemsHost="True" Margin="0,0,0,8"/>
						<Rectangle Height="8" VerticalAlignment="Bottom" Fill="{StaticResource TD_Shadow}"/>
					</Grid>
				</Popup>
			</Grid>
			<ControlTemplate.Triggers>
				<Trigger Property="IsDropDownOpen" Value="True">
					<Trigger.ExitActions>
						<BeginStoryboard x:Name="OnDropUp_BeginStoryboard" Storyboard="{StaticResource OnDropUp}"/>
					</Trigger.ExitActions>
					<Trigger.EnterActions>
						<BeginStoryboard x:Name="OnDropDown_BeginStoryboard" Storyboard="{StaticResource OnDropDown}"/>
					</Trigger.EnterActions>
				</Trigger>
			</ControlTemplate.Triggers>
		</ControlTemplate>
		<Style x:Key="StyleSelectorStyle" TargetType="{x:Type ComboBox}">
			<Setter Property="Foreground" Value="{StaticResource GlyphFg}"/>
			<Setter Property="Template" Value="{StaticResource StyleSelectorTemplate}"/>
		</Style>
		<ControlTemplate x:Key="StyleSelectorItemTemplate" TargetType="{x:Type ComboBoxItem}">
			<Border x:Name="Bd" Height="{TemplateBinding MinHeight}">
				<Border.Background>
					<SolidColorBrush Color="{StaticResource ItemNormalBg}"/>
				</Border.Background>
				<Viewbox Stretch="UniformToFill">
					<Grid Width="2000">
						<TextBlock x:Name="PART_Header" Text="{TemplateBinding Content}" Margin="24,7"/>
					</Grid>
				</Viewbox>
			</Border>
			<ControlTemplate.Triggers>
				<Trigger Property="IsHighlighted" Value="True">
					<Setter Property="Background" TargetName="Bd">
						<Setter.Value>
							<SolidColorBrush Color="{DynamicResource ItemOverBg}"/>
						</Setter.Value>
					</Setter>
				</Trigger>
			</ControlTemplate.Triggers>
		</ControlTemplate>
		<Style x:Key="StyleSelectorItemStyle" TargetType="{x:Type ComboBoxItem}">
			<Setter Property="Foreground" Value="{StaticResource GlyphFg}"/>
			<Setter Property="Template" Value="{StaticResource StyleSelectorItemTemplate}"/>
		</Style>
				<ControlTemplate x:Key="EnableControlTemplate" TargetType="{x:Type CheckBox}">
			<Grid x:Name="Bg" Height="{TemplateBinding MinHeight}">
				<Grid.Background>
					<SolidColorBrush Color="{StaticResource ButtonNormalBg}"/>
				</Grid.Background>
				<VisualStateManager.VisualStateGroups>
					<VisualStateGroup x:Name="CommonStates">
						<VisualStateGroup.Transitions>
							<VisualTransition From="Normal" GeneratedDuration="0:0:0.2" To="MouseOver"/>
							<VisualTransition From="MouseOver" GeneratedDuration="0:0:0.2" To="Normal"/>
							<VisualTransition From="MouseOver" GeneratedDuration="0:0:0.1" To="Pressed"/>
							<VisualTransition From="Pressed" GeneratedDuration="0:0:0.2" To="MouseOver"/>
							<VisualTransition From="Pressed" GeneratedDuration="0:0:0.2" To="Normal"/>
						</VisualStateGroup.Transitions>
						<VisualState x:Name="Normal"/>
						<VisualState x:Name="MouseOver">
							<Storyboard>
								<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Bg">
									<EasingColorKeyFrame KeyTime="0" Value="{StaticResource ButtonOverBg}"/>
								</ColorAnimationUsingKeyFrames>
							</Storyboard>
						</VisualState>
						<VisualState x:Name="Pressed">
							<Storyboard>
								<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Bg">
									<EasingColorKeyFrame KeyTime="0" Value="{StaticResource ButtonPressBg}"/>
								</ColorAnimationUsingKeyFrames>
							</Storyboard>
						</VisualState>
						<VisualState x:Name="Disabled"/>
					</VisualStateGroup>
					<VisualStateGroup x:Name="CheckStates">
						<VisualStateGroup.Transitions>
							<VisualTransition From="Unchecked" GeneratedDuration="0:0:0.1" To="Checked"/>
							<VisualTransition From="Checked" GeneratedDuration="0:0:0.2" To="Unchecked"/>
						</VisualStateGroup.Transitions>
						<VisualState x:Name="Checked"/>
						<VisualState x:Name="Unchecked">
							<Storyboard>
								<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Check">
									<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
								</DoubleAnimationUsingKeyFrames>
							</Storyboard>
						</VisualState>
						<VisualState x:Name="Indeterminate"/>
					</VisualStateGroup>
				</VisualStateManager.VisualStateGroups>
				<Viewbox Stretch="UniformToFill">
					<Grid Width="1000">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto"/>
							<ColumnDefinition/>
						</Grid.ColumnDefinitions>
						<TextBlock x:Name="Text" Grid.Column="1" Text="{TemplateBinding Content}" Margin="4,5"/>
						<Rectangle Fill="{StaticResource SelectorBg}" Width="{Binding ActualHeight, ElementName=Text}" Height="{Binding ActualHeight, ElementName=Text}" Margin="4"/>
						<Path x:Name="Check" Data="M3,9L6,12 12,4" Stroke="White" StrokeThickness="2" Margin="4" StrokeStartLineCap="Round" StrokeEndLineCap="Round" StrokeLineJoin="Round"/>
					</Grid>
				</Viewbox>
			</Grid>
		</ControlTemplate>
		<Style x:Key="EnableControlStyle" TargetType="{x:Type CheckBox}">
			<Setter Property="Foreground" Value="{StaticResource GlyphFg}"/>
			<Setter Property="Template" Value="{StaticResource EnableControlTemplate}"/>
		</Style>
		<Storyboard x:Key="ShowLeftSelector">
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.LayoutTransform).(ScaleTransform.ScaleX)" Storyboard.TargetName="SampleLeftBar">
				<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
			</DoubleAnimationUsingKeyFrames>
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.LayoutTransform).(ScaleTransform.ScaleX)" Storyboard.TargetName="SelectorLeftBar">
				<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
					<EasingDoubleKeyFrame.EasingFunction>
						<SineEase EasingMode="EaseInOut"/>
					</EasingDoubleKeyFrame.EasingFunction>
				</EasingDoubleKeyFrame>
			</DoubleAnimationUsingKeyFrames>
			<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsHitTestVisible)" Storyboard.TargetName="SampleOverlay">
				<DiscreteBooleanKeyFrame KeyTime="0" Value="True"/>
			</BooleanAnimationUsingKeyFrames>
		</Storyboard>
		<Storyboard x:Key="HideLeftSelector">
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.LayoutTransform).(ScaleTransform.ScaleX)" Storyboard.TargetName="SampleLeftBar">
				<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
			</DoubleAnimationUsingKeyFrames>
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.LayoutTransform).(ScaleTransform.ScaleX)" Storyboard.TargetName="SelectorLeftBar">
				<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1">
					<EasingDoubleKeyFrame.EasingFunction>
						<SineEase EasingMode="EaseInOut"/>
					</EasingDoubleKeyFrame.EasingFunction>
				</EasingDoubleKeyFrame>
			</DoubleAnimationUsingKeyFrames>
			<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsHitTestVisible)" Storyboard.TargetName="SampleOverlay">
				<DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
			</BooleanAnimationUsingKeyFrames>
		</Storyboard>
		<Storyboard x:Key="ShowTopSelector">
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.LayoutTransform).(ScaleTransform.ScaleY)" Storyboard.TargetName="SampleTopBar">
				<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
			</DoubleAnimationUsingKeyFrames>
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.LayoutTransform).(ScaleTransform.ScaleY)" Storyboard.TargetName="SelectorTopBar">
				<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
					<EasingDoubleKeyFrame.EasingFunction>
						<SineEase EasingMode="EaseInOut"/>
					</EasingDoubleKeyFrame.EasingFunction>
				</EasingDoubleKeyFrame>
			</DoubleAnimationUsingKeyFrames>
			<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsHitTestVisible)" Storyboard.TargetName="SampleOverlay">
				<DiscreteBooleanKeyFrame KeyTime="0" Value="True"/>
			</BooleanAnimationUsingKeyFrames>
		</Storyboard>
		<Storyboard x:Key="HideTopSelector">
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.LayoutTransform).(ScaleTransform.ScaleY)" Storyboard.TargetName="SampleTopBar">
				<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
			</DoubleAnimationUsingKeyFrames>
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.LayoutTransform).(ScaleTransform.ScaleY)" Storyboard.TargetName="SelectorTopBar">
				<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1">
					<EasingDoubleKeyFrame.EasingFunction>
						<SineEase EasingMode="EaseInOut"/>
					</EasingDoubleKeyFrame.EasingFunction>
				</EasingDoubleKeyFrame>
			</DoubleAnimationUsingKeyFrames>
			<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsHitTestVisible)" Storyboard.TargetName="SampleOverlay">
				<DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
			</BooleanAnimationUsingKeyFrames>
		</Storyboard>
		<Storyboard x:Key="ShowContainer1" BeginTime="0:0:0.2" SpeedRatio="1.4">
			<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Fade">
				<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
				<DiscreteObjectKeyFrame KeyTime="0:0:0.8" Value="{x:Static Visibility.Collapsed}"/>
			</ObjectAnimationUsingKeyFrames>
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(Brush.Opacity)" Storyboard.TargetName="Fade">
				<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
				<EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1"/>
				<EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="0"/>
			</DoubleAnimationUsingKeyFrames>
			<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="SampleContainer2">
				<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
				<DiscreteObjectKeyFrame KeyTime="0:0:0.4" Value="{x:Static Visibility.Collapsed}"/>
			</ObjectAnimationUsingKeyFrames>
			<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="SampleContainer1">
				<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
				<DiscreteObjectKeyFrame KeyTime="0:0:0.4" Value="{x:Static Visibility.Visible}"/>
			</ObjectAnimationUsingKeyFrames>
		</Storyboard>
		<Storyboard x:Key="ShowContainer2" BeginTime="0:0:0.2" SpeedRatio="1.4">
			<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Fade">
				<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
				<DiscreteObjectKeyFrame KeyTime="0:0:0.8" Value="{x:Static Visibility.Collapsed}"/>
			</ObjectAnimationUsingKeyFrames>
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(Brush.Opacity)" Storyboard.TargetName="Fade">
				<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
				<EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1"/>
				<EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="0"/>
			</DoubleAnimationUsingKeyFrames>
			<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="SampleContainer1">
				<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
				<DiscreteObjectKeyFrame KeyTime="0:0:0.4" Value="{x:Static Visibility.Collapsed}"/>
			</ObjectAnimationUsingKeyFrames>
			<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="SampleContainer2">
				<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
				<DiscreteObjectKeyFrame KeyTime="0:0:0.4" Value="{x:Static Visibility.Visible}"/>
			</ObjectAnimationUsingKeyFrames>
		</Storyboard>
	</Grid.Resources>
	<Grid.Triggers>
		<EventTrigger RoutedEvent="ToggleButton.Checked" SourceName="SelectorLeftExpand">
			<BeginStoryboard Storyboard="{StaticResource ShowLeftSelector}"/>
		</EventTrigger>
		<EventTrigger RoutedEvent="ToggleButton.Unchecked" SourceName="SelectorLeftExpand">
			<BeginStoryboard Storyboard="{StaticResource HideLeftSelector}"/>
		</EventTrigger>
		<EventTrigger RoutedEvent="ToggleButton.Checked" SourceName="SelectorTopExpand">
			<BeginStoryboard Storyboard="{StaticResource ShowTopSelector}"/>
		</EventTrigger>
		<EventTrigger RoutedEvent="ToggleButton.Unchecked" SourceName="SelectorTopExpand">
			<BeginStoryboard Storyboard="{StaticResource HideTopSelector}"/>
		</EventTrigger>
	</Grid.Triggers>
	<Grid>
		<Grid>
            <Grid.Resources><ResourceDictionary Source="../Common/LogoResources.xaml"/></Grid.Resources>
            <Border Background="{StaticResource NoesisLogoBg}"/>
            <Path Data="{StaticResource NoesisLogoGeometry}" Fill="{StaticResource NoesisLogoFg}" RenderTransform="{StaticResource NoesisLogoTransform}" RenderTransformOrigin="0.5,0.5" Stretch="Uniform" StrokeLineJoin="Round" UseLayoutRounding="False"/>
        </Grid>
		<Grid x:Name="Layout">
			<Grid.RowDefinitions>
				<RowDefinition Height="3.5*"/>
				<RowDefinition Height="0.5*"/>
				<RowDefinition Height="6*"/>
			</Grid.RowDefinitions>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="2.5*"/>
				<ColumnDefinition Width="0.5*"/>
				<ColumnDefinition Width="7*"/>
			</Grid.ColumnDefinitions>
			<Decorator x:Name="LeftBarWidth" Grid.RowSpan="3"/>
			<Decorator x:Name="TopBarHeight" Grid.ColumnSpan="3"/>
			<Decorator x:Name="ExpandWidth" Grid.RowSpan="3" Grid.Column="1"/>
			<Decorator x:Name="ExpandHeight" Grid.ColumnSpan="3" Grid.Row="1"/>
			<Decorator x:Name="ItemHeight" Grid.Row="2" Grid.Column="2" Height="64"/>
		</Grid>
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition Width="*"/>
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto"/>
				<RowDefinition Height="*"/>
			</Grid.RowDefinitions>
			<Decorator x:Name="SampleLeftBar" Width="{Binding ActualWidth, ElementName=LeftBarWidth}" Grid.RowSpan="2">
				<Decorator.LayoutTransform>
					<ScaleTransform ScaleX="0"/>
				</Decorator.LayoutTransform>
			</Decorator>
			<Decorator x:Name="SampleTopBar" Height="{Binding ActualHeight, ElementName=TopBarHeight}" Grid.ColumnSpan="2">
				<Decorator.LayoutTransform>
					<ScaleTransform ScaleY="0"/>
				</Decorator.LayoutTransform>
			</Decorator>
			<Viewbox x:Name="SampleContainer" Grid.Row="1" Grid.Column="1">
			    <Grid>
					<Border x:Name="SampleContainer1">
						<Canvas Width="1280" Height="720" Margin="200">
                        	<Canvas x:Name="Layer_4" Width="1280" Height="720" Canvas.Left="0" Canvas.Top="-100">
                        		<Rectangle Height="612" Canvas.Left="335" Canvas.Top="57" Width="612" Fill="#20000000" RadiusX="30" RadiusY="30" StrokeThickness="0"/>
                        		<Path Width="600.001" Height="600.001" Canvas.Left="340" Canvas.Top="60" Stretch="Fill" Data="M 316,5.99957L 964,5.99957C 980.569,5.99957 994,19.4311 994,35.9996L 994,684C 994,700.569 980.569,714 964,714L 316,714C 299.431,714 286,700.569 286,684L 286,35.9996C 286,19.4311 299.431,5.99957 316,5.99957 Z ">
                        			<Path.Fill>
                        				<LinearGradientBrush StartPoint="0.5,1.00085" EndPoint="0.5,-0.000848974">
                        					<GradientStop Color="#FF1D5684" Offset="0"/>
                        					<GradientStop Color="#FF2A79BD" Offset="1"/>
                        				</LinearGradientBrush>
                        			</Path.Fill>
                        		</Path>
                        		<Path Width="553.142" Height="553.142" Canvas.Left="363.428" Canvas.Top="83.429" Stretch="Fill" Data="F1 M 318.645,33.6462L 961.353,33.6462C 964.114,33.6462 966.353,35.8848 966.353,38.6462L 966.353,681.354C 966.353,684.116 964.114,686.354 961.353,686.354L 318.645,686.354C 315.883,686.354 313.645,684.116 313.645,681.354L 313.645,38.6462C 313.645,35.8848 315.883,33.6462 318.645,33.6462 Z ">
                        			<Path.Fill>
                        				<LinearGradientBrush StartPoint="0.499999,1.00085" EndPoint="0.499999,-0.000848235">
                        					<GradientStop Color="#FF1F5786" Offset="0"/>
                        					<GradientStop Color="#FF058DF5" Offset="1"/>
                        				</LinearGradientBrush>
                        			</Path.Fill>
                        		</Path>
                        		<Path Width="553.143" Height="384.156" Canvas.Left="363.428" Canvas.Top="83.428" Stretch="Fill" Data="F1 M 319.655,33.6451L 960.344,33.6451C 963.664,33.6451 966.354,36.336 966.354,39.6553L 966.354,351.789C 912.234,341.458 855.431,335.958 796.866,335.958C 606.727,335.958 435.166,393.932 313.645,486.949L 313.645,39.6553C 313.645,36.336 316.336,33.6451 319.655,33.6451 Z ">
                        			<Path.Fill>
                        				<LinearGradientBrush StartPoint="0.5,1.21995" EndPoint="0.5,-0.219946">
                        					<GradientStop Color="#00FFFFFF" Offset="0"/>
                        					<GradientStop Color="#4CFFFFFF" Offset="1"/>
                        				</LinearGradientBrush>
                        			</Path.Fill>
                        		</Path>
                        	</Canvas>
                        	<Canvas x:Name="Layer_1" Width="1280" Height="720" Canvas.Left="0" Canvas.Top="-100">
                        		<Path Width="389.823" Height="371.819" Canvas.Left="427.068" Canvas.Top="123.411" Stretch="Fill" Fill="#FFFFFFFF" Data="M 587.188,224.789L 528.998,302.023L 529.06,302.029L 602.283,474.841L 731.479,489.57L 731.467,489.543L 791.299,414.397L 814.115,468.826L 755.672,546.735L 564.309,525.34L 467.244,296.571L 525.842,217.147L 587.188,224.789 Z M 511.928,185.521L 434.668,290.059L 434.762,290.07L 469.862,379.451L 411.314,371.995L 373.068,282.428L 373.069,282.427L 487.271,127.397L 733.923,157.722L 773.419,248.186L 736.125,297.484L 698.191,208.538L 698.205,208.518L 511.966,185.526L 511.928,185.521 Z M 756.287,133.146L 661.31,118.88L 697.039,71.9056L 793.73,83.5678L 870.891,259.981L 721.301,458.434L 623.213,447.397L 599.163,390.456L 695.328,402.623L 695.326,402.618L 808.209,252.234L 756.325,133.096L 756.287,133.146 Z "/>
                        	</Canvas>
                        	<Canvas x:Name="Layer_2" Width="1280" Height="720" Canvas.Left="0" Canvas.Top="-100">
                        		<Path Width="347.051" Height="42.477" Canvas.Left="386.893" Canvas.Top="558.065" Stretch="Fill" Fill="#FF000000" Data="F1 M 753.262,605.272L 698.394,605.272C 688.318,605.272 683.279,609.192 683.279,617.031L 683.279,624.869C 683.279,632.147 688.318,635.506 698.394,635.506L 739.826,635.506C 742.067,635.506 742.627,636.067 742.627,637.185L 742.627,641.664C 742.627,642.785 742.067,643.345 739.826,643.345L 684.957,643.345L 684.957,654.542L 739.826,654.542C 749.906,654.542 754.944,650.623 754.944,642.785L 754.944,636.067C 754.944,628.228 749.906,624.309 739.826,624.309L 698.394,624.309C 696.715,624.309 695.597,623.749 695.597,622.069L 695.597,618.71C 695.597,617.589 696.715,616.47 698.394,616.47L 753.262,616.47M 677.121,605.272L 665.362,605.272L 665.362,654.542L 677.121,654.542M 657.525,605.272L 602.657,605.272C 592.58,605.272 587.541,609.192 587.541,617.031L 587.541,624.869C 587.541,632.147 592.58,635.506 602.657,635.506L 644.088,635.506C 645.766,635.506 646.887,636.067 646.887,637.185L 646.887,641.664C 646.887,642.785 645.766,643.345 644.088,643.345L 589.221,643.345L 589.221,654.542L 644.088,654.542C 654.164,654.542 659.202,650.623 659.202,642.785L 659.202,636.067C 659.202,628.228 654.164,624.309 644.088,624.309L 602.657,624.309C 600.418,624.309 599.859,623.749 599.859,622.069L 599.859,618.71C 599.859,617.589 600.418,616.47 602.657,616.47L 657.525,616.47M 581.383,605.272L 527.073,605.272C 516.997,605.272 511.959,609.192 511.959,617.031L 511.959,642.224C 511.959,650.623 516.997,654.542 527.073,654.542L 581.941,654.542L 581.941,643.345L 527.073,643.345C 524.833,643.345 524.275,642.224 524.275,640.544L 524.275,635.506L 581.383,635.506L 581.383,624.309L 524.275,624.309L 524.275,619.27C 524.275,617.589 524.833,616.47 527.073,616.47L 581.383,616.47M 486.763,616.47C 491.243,616.47 493.483,618.149 493.483,620.949L 493.483,638.864C 493.483,641.664 491.243,643.345 486.763,643.345L 448.131,643.345C 444.21,643.345 441.973,641.664 441.973,638.864L 441.973,620.949C 441.973,618.149 444.21,616.47 448.131,616.47M 505.8,620.949C 505.8,610.313 499.079,605.272 486.763,605.272L 448.131,605.272C 435.814,605.272 429.654,610.313 429.654,620.949L 429.654,638.864C 429.654,649.503 435.814,654.542 448.131,654.542L 486.763,654.542C 499.079,654.542 505.8,649.503 505.8,638.864M 423.497,605.272L 411.178,605.272L 411.178,643.345L 410.62,643.345C 408.38,643.345 405.582,641.664 403.899,639.425L 379.827,611.992C 375.348,607.514 371.428,605.272 364.709,605.272L 352.393,605.272L 352.393,654.542L 364.151,654.542L 364.151,616.47L 364.709,616.47C 367.51,616.47 370.308,618.149 371.988,620.389L 395.503,647.823C 399.423,652.303 403.899,654.542 410.62,654.542L 423.497,654.542L 423.497,605.272 Z "/>
                        	</Canvas>
                        	<Canvas x:Name="Layer_3" Width="1280" Height="720" Canvas.Left="0" Canvas.Top="-100">
                        		<Viewbox Width="160.467" Height="77.888" Canvas.Left="734.601" Canvas.Top="527.783">
                        			<Canvas Width="160.467" Height="77.888">
                        				<Path Width="139.828" Height="67.75" Canvas.Top="5.5" Stretch="Fill" Fill="#FF25AFFF" Data="M62.0145,37.344076 L36.83,37.344076 36.83,44.926471 52.0554,44.926471 52.0554,68.087556 C49.7987,69.354955 45.47,70.046355 39.0692,70.161555 30.1169,70.079555 23.054,67.334157 17.8804,61.92546 12.7068,56.516664 10.0663,48.936768 9.9591101,39.185675 10.0757,29.270881 12.8374,21.547086 18.2443,16.01429 23.6511,10.481593 31.0033,7.6709551 40.3008,7.5824551 44.0732,7.5994851 47.3121,7.9166249 50.0175,8.5338645 52.7228,9.1511141 55.1005,9.9662436 57.1505,10.979293 L59.6979,3.2960779 C57.9758,2.4893784 55.4521,1.7487789 52.127,1.0742793 48.8019,0.39977974 44.9344,0.041686973 40.5248,0 27.766,0.19036888 17.8489,3.8726775 10.7736,11.046893 3.69824,18.221188 0.107117,27.745182 0,39.618874 0.0314331,45.552071 0.94287101,50.979567 2.73431,55.901464 4.52563,60.823361 7.00854,64.923758 10.183,68.202756 13.8778,71.576654 18.0764,74.017252 22.7787,75.524551 27.4811,77.03185 32.6874,77.77165&#xD;&#xA;38.3975,77.74405 43.5568,77.68045 48.2018,77.22845 52.3329,76.388151 56.4641,75.547851 59.6912,74.700852 62.0145,73.847452 L62.0145,37.344076 z M76.9515,1.03284 L76.9515,45.730998 C77.115799,57.408397 79.73109,65.699297 84.797272,70.603496 89.863555,75.507596 96.395032,77.887896 104.3919,77.744096 112.84787,77.852696 119.73885,75.373996 125.06483,70.307896 130.39081,65.241897 133.1388,56.936997 133.3078,45.393198 L133.3078,1.03284 123.34884,1.03284 123.34884,46.068698 C123.27484,54.362397 121.57784,60.460597 118.25485,64.363497 114.93187,68.266496 110.42488,70.199196 104.7329,70.161596 99.52022,70.213296 95.272835,68.308696 91.990347,64.447997 88.707859,60.587297 87.014565,54.460897 86.910565,46.068698 L86.910565,1.03284 76.9515,1.03284 z M150.508,1.03284 L160.46711,1.03284 L160.46711,76.711242 L150.508,76.711242 z" Canvas.Left="9"/>
                        			</Canvas>
                        		</Viewbox>
                        	</Canvas>
                        	<Grid Canvas.Bottom="-50" Width="1280">
        						<TextBlock Text="Control &amp; Style Gallery" TextAlignment="Center" Foreground="#40000000" FontSize="100" Margin="0,6,-4,0"/>
        						<TextBlock Text="Control &amp; Style Gallery" TextAlignment="Center" Foreground="White" FontSize="100"/>
        					</Grid>
                        </Canvas>
					</Border>
					<Border x:Name="SampleContainer2" Visibility="Collapsed"/>
				</Grid>
			</Viewbox>
			<Border x:Name="Fade" Grid.Row="1" Grid.Column="1" Visibility="Collapsed">
				<Border.Background>
					<SolidColorBrush Color="#FF0A3459" Opacity="0"/>
				</Border.Background>
			</Border>
			<Grid x:Name="SampleOverlay" Grid.Row="1" Grid.Column="1" Background="Transparent" IsHitTestVisible="false"/>
		</Grid>
		<Grid>
			<Grid.RowDefinitions>
				<RowDefinition Height="4*"/>
				<RowDefinition Height="6*"/>
			</Grid.RowDefinitions>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="3*"/>
				<ColumnDefinition Width="7*"/>
			</Grid.ColumnDefinitions>
			<StackPanel x:Name="SelectorLeft" Grid.RowSpan="2" Orientation="Horizontal" HorizontalAlignment="Right">
				<Border x:Name="SelectorLeftContainer" Width="{Binding ActualWidth, ElementName=LeftBarWidth}" Background="{StaticResource SelectorBg}">
					<Grid x:Name="Selector">
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"/>
							<RowDefinition/>
							<RowDefinition Height="Auto"/>
						</Grid.RowDefinitions>
						<Rectangle Grid.RowSpan="3" Height="12" VerticalAlignment="Bottom" Margin="0,0,0,-12" Fill="{StaticResource TD_Shadow}" IsHitTestVisible="False"/>
						<Rectangle Grid.RowSpan="3" Width="12" HorizontalAlignment="Right" Margin="0,0,-12,0" Fill="{StaticResource LR_Shadow}" IsHitTestVisible="False"/>
						<ComboBox x:Name="StyleSelector" MinHeight="{Binding Height, ElementName=ItemHeight}" Style="{StaticResource StyleSelectorStyle}">
							<ComboBoxItem Style="{StaticResource StyleSelectorItemStyle}" MinHeight="{Binding Height, ElementName=ItemHeight}" Content="Noesis Style" IsSelected="True"/>
							<ComboBoxItem Style="{StaticResource StyleSelectorItemStyle}" MinHeight="{Binding Height, ElementName=ItemHeight}" Content="Simple Style"/>
							<ComboBoxItem Style="{StaticResource StyleSelectorItemStyle}" MinHeight="{Binding Height, ElementName=ItemHeight}" Content="Windows Style"/>
						</ComboBox>
						<TreeView x:Name="SampleSelector" Grid.Row="1" Background="{x:Null}" BorderBrush="{x:Null}" BorderThickness="0" Style="{StaticResource SelectorStyle}" MinWidth="{Binding Height, ElementName=ItemHeight}">
							<TreeViewItem Style="{StaticResource SampleItemStyle}" MinHeight="{Binding Height, ElementName=ItemHeight}" Header="Brushes">
								<TreeViewItem Style="{StaticResource SampleItemStyle}" MinHeight="{Binding Height, ElementName=ItemHeight}" Header="All brushes" Tag="Assets/NoesisGUI/Samples/ControlGallery/Samples/Brushes.xaml"/>
								<TreeViewItem Style="{StaticResource SampleItemStyle}" MinHeight="{Binding Height, ElementName=ItemHeight}" Header="ImageBrush Stretch" Tag="Assets/NoesisGUI/Samples/ControlGallery/Samples/ImageBrushStretch.xaml"/>
								<TreeViewItem Style="{StaticResource SampleItemStyle}" MinHeight="{Binding Height, ElementName=ItemHeight}" Header="ImageBrush Tile" Tag="Assets/NoesisGUI/Samples/ControlGallery/Samples/ImageBrushTile.xaml"/>
								<TreeViewItem Style="{StaticResource SampleItemStyle}" MinHeight="{Binding Height, ElementName=ItemHeight}" Header="ImageBrush Viewbox" Tag="Assets/NoesisGUI/Samples/ControlGallery/Samples/ImageBrushViewbox.xaml"/>
								<TreeViewItem Style="{StaticResource SampleItemStyle}" MinHeight="{Binding Height, ElementName=ItemHeight}" Header="Image Atlas" Tag="Assets/NoesisGUI/Samples/ControlGallery/Samples/ImageAtlas.xaml"/>
								<TreeViewItem Style="{StaticResource SampleItemStyle}" MinHeight="{Binding Height, ElementName=ItemHeight}" Header="Reflections" Tag="Assets/NoesisGUI/Samples/ControlGallery/Samples/Reflections.xaml"/>
							</TreeViewItem>
							<TreeViewItem Style="{StaticResource SampleItemStyle}" MinHeight="{Binding Height, ElementName=ItemHeight}" Header="Shapes">
								<TreeViewItem Style="{StaticResource SampleItemStyle}" MinHeight="{Binding Height, ElementName=ItemHeight}" Header="Butterfly" Tag="Assets/NoesisGUI/Samples/ControlGallery/Samples/Butterfly.xaml"/>
								<TreeViewItem Style="{StaticResource SampleItemStyle}" MinHeight="{Binding Height, ElementName=ItemHeight}" Header="Lion" Tag="Assets/NoesisGUI/Samples/ControlGallery/Samples/Lion.xaml"/>
								<TreeViewItem Style="{StaticResource SampleItemStyle}" MinHeight="{Binding Height, ElementName=ItemHeight}" Header="Tiger" Tag="Assets/NoesisGUI/Samples/ControlGallery/Samples/Tiger.xaml"/>
								<TreeViewItem Style="{StaticResource SampleItemStyle}" MinHeight="{Binding Height, ElementName=ItemHeight}" Header="Time" Tag="Assets/NoesisGUI/Samples/ControlGallery/Samples/Time.xaml"/>
								<TreeViewItem Style="{StaticResource SampleItemStyle}" MinHeight="{Binding Height, ElementName=ItemHeight}" Header="Tux" Tag="Assets/NoesisGUI/Samples/ControlGallery/Samples/Tux.xaml"/>
                                <TreeViewItem Style="{StaticResource SampleItemStyle}" MinHeight="{Binding Height, ElementName=ItemHeight}" Header="Car HUD" Tag="Assets/NoesisGUI/Samples/CarHud/CarHudNoBg.xaml"/>
							</TreeViewItem>
							<TreeViewItem Style="{StaticResource SampleItemStyle}" MinHeight="{Binding Height, ElementName=ItemHeight}" Header="Panels">
								<TreeViewItem Style="{StaticResource SampleItemStyle}" MinHeight="{Binding Height, ElementName=ItemHeight}" Header="Canvas" Tag="Assets/NoesisGUI/Samples/ControlGallery/Samples/Canvas.xaml"/>
								<TreeViewItem Style="{StaticResource SampleItemStyle}" MinHeight="{Binding Height, ElementName=ItemHeight}" Header="DockPanel" Tag="Assets/NoesisGUI/Samples/ControlGallery/Samples/DockPanel.xaml"/>
								<TreeViewItem Style="{StaticResource SampleItemStyle}" MinHeight="{Binding Height, ElementName=ItemHeight}" Header="Grid" Tag="Assets/NoesisGUI/Samples/ControlGallery/Samples/Grid.xaml"/>
								<TreeViewItem Style="{StaticResource SampleItemStyle}" MinHeight="{Binding Height, ElementName=ItemHeight}" Header="UniformGrid" Tag="Assets/NoesisGUI/Samples/ControlGallery/Samples/UniformGrid.xaml"/>
								<TreeViewItem Style="{StaticResource SampleItemStyle}" MinHeight="{Binding Height, ElementName=ItemHeight}" Header="StackPanel" Tag="Assets/NoesisGUI/Samples/ControlGallery/Samples/StackPanel.xaml"/>
								<TreeViewItem Style="{StaticResource SampleItemStyle}" MinHeight="{Binding Height, ElementName=ItemHeight}" Header="WraPanel" Tag="Assets/NoesisGUI/Samples/ControlGallery/Samples/WrapPanel.xaml"/>
								<TreeViewItem Style="{StaticResource SampleItemStyle}" MinHeight="{Binding Height, ElementName=ItemHeight}" Header="Expander" Tag="Assets/NoesisGUI/Samples/ControlGallery/Samples/Expander.xaml"/>
							</TreeViewItem>
							<TreeViewItem Style="{StaticResource SampleItemStyle}" MinHeight="{Binding Height, ElementName=ItemHeight}" Header="Button controls">
								<TreeViewItem Style="{StaticResource SampleItemStyle}" MinHeight="{Binding Height, ElementName=ItemHeight}" Header="Button" Tag="Assets/NoesisGUI/Samples/ControlGallery/Samples/Button.xaml"/>
								<TreeViewItem Style="{StaticResource SampleItemStyle}" MinHeight="{Binding Height, ElementName=ItemHeight}" Header="CheckBox" Tag="Assets/NoesisGUI/Samples/ControlGallery/Samples/CheckBox.xaml"/>
								<TreeViewItem Style="{StaticResource SampleItemStyle}" MinHeight="{Binding Height, ElementName=ItemHeight}" Header="RadioButton" Tag="Assets/NoesisGUI/Samples/ControlGallery/Samples/RadioButton.xaml"/>
							</TreeViewItem>
							<TreeViewItem Style="{StaticResource SampleItemStyle}" MinHeight="{Binding Height, ElementName=ItemHeight}" Header="Selector controls">
								<TreeViewItem Style="{StaticResource SampleItemStyle}" MinHeight="{Binding Height, ElementName=ItemHeight}" Header="ComboBox" Tag="Assets/NoesisGUI/Samples/ControlGallery/Samples/ComboBox.xaml"/>
								<TreeViewItem Style="{StaticResource SampleItemStyle}" MinHeight="{Binding Height, ElementName=ItemHeight}" Header="ListBox" Tag="Assets/NoesisGUI/Samples/ControlGallery/Samples/ListBox.xaml"/>
								<TreeViewItem Style="{StaticResource SampleItemStyle}" MinHeight="{Binding Height, ElementName=ItemHeight}" Header="TreeView" Tag="Assets/NoesisGUI/Samples/ControlGallery/Samples/TreeView.xaml"/>
							</TreeViewItem>
							<TreeViewItem Style="{StaticResource SampleItemStyle}" MinHeight="{Binding Height, ElementName=ItemHeight}" Header="Menu controls">
								<TreeViewItem Style="{StaticResource SampleItemStyle}" MinHeight="{Binding Height, ElementName=ItemHeight}" Header="Menu" Tag="Assets/NoesisGUI/Samples/ControlGallery/Samples/Menu.xaml"/>
								<TreeViewItem Style="{StaticResource SampleItemStyle}" MinHeight="{Binding Height, ElementName=ItemHeight}" Header="ContextMenu" Tag="Assets/NoesisGUI/Samples/ControlGallery/Samples/ContextMenu.xaml"/>
							</TreeViewItem>
							<TreeViewItem Style="{StaticResource SampleItemStyle}" MinHeight="{Binding Height, ElementName=ItemHeight}" Header="Range controls">
								<TreeViewItem Style="{StaticResource SampleItemStyle}" MinHeight="{Binding Height, ElementName=ItemHeight}" Header="Slider" Tag="Assets/NoesisGUI/Samples/ControlGallery/Samples/Slider.xaml"/>
								<TreeViewItem Style="{StaticResource SampleItemStyle}" MinHeight="{Binding Height, ElementName=ItemHeight}" Header="ProgressBar" Tag="Assets/NoesisGUI/Samples/ControlGallery/Samples/ProgressBar.xaml"/>
							</TreeViewItem>
							<TreeViewItem Style="{StaticResource SampleItemStyle}" MinHeight="{Binding Height, ElementName=ItemHeight}" Header="Bars">
								<TreeViewItem Style="{StaticResource SampleItemStyle}" MinHeight="{Binding Height, ElementName=ItemHeight}" Header="ToolBar" Tag="Assets/NoesisGUI/Samples/ControlGallery/Samples/ToolBar.xaml"/>
								<TreeViewItem Style="{StaticResource SampleItemStyle}" MinHeight="{Binding Height, ElementName=ItemHeight}" Header="StatusBar" Tag="Assets/NoesisGUI/Samples/ControlGallery/Samples/StatusBar.xaml"/>
							</TreeViewItem>
							<TreeViewItem Style="{StaticResource SampleItemStyle}" MinHeight="{Binding Height, ElementName=ItemHeight}" Header="Text controls">
								<TreeViewItem Style="{StaticResource SampleItemStyle}" MinHeight="{Binding Height, ElementName=ItemHeight}" Header="TextBlock" Tag="Assets/NoesisGUI/Samples/ControlGallery/Samples/Text.xaml"/>
								<TreeViewItem Style="{StaticResource SampleItemStyle}" MinHeight="{Binding Height, ElementName=ItemHeight}" Header="TextBox" Tag="Assets/NoesisGUI/Samples/ControlGallery/Samples/TextBox.xaml"/>
								<TreeViewItem Style="{StaticResource SampleItemStyle}" MinHeight="{Binding Height, ElementName=ItemHeight}" Header="PasswordBox" Tag="Assets/NoesisGUI/Samples/ControlGallery/Samples/PasswordBox.xaml"/>
							</TreeViewItem>
							<TreeViewItem Style="{StaticResource SampleItemStyle}" MinHeight="{Binding Height, ElementName=ItemHeight}" Header="General">
								<TreeViewItem Style="{StaticResource SampleItemStyle}" MinHeight="{Binding Height, ElementName=ItemHeight}" Header="Touch" Tag="Assets/NoesisGUI/Samples/ControlGallery/Samples/Touch.xaml"/>
								<TreeViewItem Style="{StaticResource SampleItemStyle}" MinHeight="{Binding Height, ElementName=ItemHeight}" Header="Projection" Tag="Assets/NoesisGUI/Samples/ControlGallery/Samples/Projection.xaml"/>
								<TreeViewItem Style="{StaticResource SampleItemStyle}" MinHeight="{Binding Height, ElementName=ItemHeight}" Header="Styles" Tag="Assets/NoesisGUI/Samples/ControlGallery/Samples/Styles.xaml"/>
								<TreeViewItem Style="{StaticResource SampleItemStyle}" MinHeight="{Binding Height, ElementName=ItemHeight}" Header="Control palette" Tag="Assets/NoesisGUI/Samples/ControlGallery/Samples/Palette.xaml"/>
							</TreeViewItem>
						</TreeView>
						<Rectangle Grid.Row="1" Height="8" VerticalAlignment="Top" Fill="{StaticResource TD_Shadow}"/>
						<Rectangle Grid.Row="1" Height="8" VerticalAlignment="Bottom" Fill="{StaticResource DT_Shadow}"/>
						<Rectangle Grid.Row="2" MinHeight="{Binding Height, ElementName=ItemHeight}">
							<Rectangle.LayoutTransform>
								<ScaleTransform ScaleY="0.25"/>
							</Rectangle.LayoutTransform>
							<Rectangle.Fill>
								<SolidColorBrush Color="{StaticResource ButtonDarkNormalBg}"/>
							</Rectangle.Fill>
						</Rectangle>
					</Grid>
				</Border>
				<ToggleButton x:Name="SelectorLeftExpand" Template="{StaticResource SelectorExpandTemplate}"
					Width="{Binding ActualWidth, ElementName=ExpandWidth}" Height="{Binding Width, RelativeSource={RelativeSource Self}}" VerticalAlignment="Top">
					<Viewbox>
						<Path Data="{StaticResource SelectorExpandGeometry}" Stretch="None" Width="10" Height="10" Stroke="{StaticResource GlyphFg}" StrokeThickness="1" StrokeStartLineCap="Round" StrokeEndLineCap="Round" Margin="1"/>
					</Viewbox>
				</ToggleButton>
				<Decorator x:Name="SelectorLeftBar" Width="{Binding ActualWidth, ElementName=LeftBarWidth}">
					<Decorator.LayoutTransform>
						<ScaleTransform ScaleX="1"/>
					</Decorator.LayoutTransform>
				</Decorator>
			</StackPanel>
			<StackPanel x:Name="SelectorTop" Grid.ColumnSpan="2" VerticalAlignment="Bottom" d:IsHidden="True">
				<Border x:Name="SelectorTopContainer" Height="{Binding ActualHeight, ElementName=TopBarHeight}" Background="{StaticResource SelectorBg}"/>
				<ToggleButton x:Name="SelectorTopExpand" Template="{StaticResource SelectorExpandTemplate}"
					Width="{Binding Height, RelativeSource={RelativeSource Self}}" Height="{Binding ActualHeight, ElementName=ExpandHeight}" HorizontalAlignment="Left">
					<Viewbox>
						<Path Data="{StaticResource SelectorExpandGeometry}" Stretch="None" Width="10" Height="10" Stroke="{StaticResource GlyphFg}" StrokeThickness="1" StrokeStartLineCap="Round" StrokeEndLineCap="Round" Margin="1"/>
					</Viewbox>
				</ToggleButton>
				<Decorator x:Name="SelectorTopBar" Height="{Binding ActualHeight, ElementName=TopBarHeight}">
					<Decorator.LayoutTransform>
						<ScaleTransform ScaleX="1"/>
					</Decorator.LayoutTransform>
				</Decorator>
			</StackPanel>
		</Grid>
	</Grid>
</Grid>