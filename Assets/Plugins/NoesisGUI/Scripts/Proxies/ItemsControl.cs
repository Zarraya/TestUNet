/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

namespace Noesis
{

public class ItemsControl : Control {
  internal new static ItemsControl CreateProxy(IntPtr cPtr, bool cMemoryOwn) {
    return new ItemsControl(cPtr, cMemoryOwn);
  }

  internal ItemsControl(IntPtr cPtr, bool cMemoryOwn) : base(cPtr, cMemoryOwn) {
  }

  internal static HandleRef getCPtr(ItemsControl obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  public System.Collections.IEnumerable ItemsSource {
    get {
      return (System.Collections.IEnumerable)GetItemsSourceHelper();
    }
    set {
      SetItemsSourceHelper(value);
    }
  }

  public ItemsControl() {
  }

  protected override System.IntPtr CreateCPtr(System.Type type, out bool registerExtend) {
    if ((object)type.TypeHandle == typeof(ItemsControl).TypeHandle) {
      registerExtend = false;
      return NoesisGUI_PINVOKE.new_ItemsControl();
    }
    else {
      return base.CreateExtendCPtr(type, out registerExtend);
    }
  }

  public static ItemsControl ItemsControlFromItemContainer(DependencyObject container) {
    IntPtr cPtr = NoesisGUI_PINVOKE.ItemsControl_ItemsControlFromItemContainer(DependencyObject.getCPtr(container));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return (ItemsControl)Noesis.Extend.GetProxy(cPtr, false);
  }

  public static DependencyObject ContainerFromElement(ItemsControl itemsControl, DependencyObject element) {
    IntPtr cPtr = NoesisGUI_PINVOKE.ItemsControl_ContainerFromElement__SWIG_0(ItemsControl.getCPtr(itemsControl), DependencyObject.getCPtr(element));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return (DependencyObject)Noesis.Extend.GetProxy(cPtr, false);
  }

  public static ItemsControl GetItemsOwner(DependencyObject itemsHost) {
    IntPtr cPtr = NoesisGUI_PINVOKE.ItemsControl_GetItemsOwner(DependencyObject.getCPtr(itemsHost));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return (ItemsControl)Noesis.Extend.GetProxy(cPtr, false);
  }

  public bool IsItemItsOwnContainer(object item) {
    bool ret = NoesisGUI_PINVOKE.ItemsControl_IsItemItsOwnContainer(swigCPtr, Noesis.Extend.GetInstanceHandle(item));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static DependencyProperty DisplayMemberPathProperty {
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.ItemsControl_DisplayMemberPathProperty_get();
      #if UNITY_EDITOR || NOESIS_API
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      #endif
      return (DependencyProperty)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static DependencyProperty HasItemsProperty {
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.ItemsControl_HasItemsProperty_get();
      #if UNITY_EDITOR || NOESIS_API
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      #endif
      return (DependencyProperty)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static DependencyProperty ItemContainerStyleProperty {
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.ItemsControl_ItemContainerStyleProperty_get();
      #if UNITY_EDITOR || NOESIS_API
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      #endif
      return (DependencyProperty)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static DependencyProperty ItemsPanelProperty {
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.ItemsControl_ItemsPanelProperty_get();
      #if UNITY_EDITOR || NOESIS_API
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      #endif
      return (DependencyProperty)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static DependencyProperty ItemsSourceProperty {
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.ItemsControl_ItemsSourceProperty_get();
      #if UNITY_EDITOR || NOESIS_API
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      #endif
      return (DependencyProperty)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static DependencyProperty ItemTemplateProperty {
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.ItemsControl_ItemTemplateProperty_get();
      #if UNITY_EDITOR || NOESIS_API
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      #endif
      return (DependencyProperty)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static DependencyProperty ItemTemplateSelectorProperty {
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.ItemsControl_ItemTemplateSelectorProperty_get();
      #if UNITY_EDITOR || NOESIS_API
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      #endif
      return (DependencyProperty)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public string DisplayMemberPath {
    set {
      NoesisGUI_PINVOKE.ItemsControl_DisplayMemberPath_set(swigCPtr, value != null ? value : string.Empty);
      #if UNITY_EDITOR || NOESIS_API
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      #endif
    }
    get {
      IntPtr strPtr = NoesisGUI_PINVOKE.ItemsControl_DisplayMemberPath_get(swigCPtr);
      #if UNITY_EDITOR || NOESIS_API
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      #endif
      string str = Noesis.Extend.StringFromNativeUtf8(strPtr);
      return str;
    }
  }

  public bool HasItems {
    get {
      bool ret = NoesisGUI_PINVOKE.ItemsControl_HasItems_get(swigCPtr);
      #if UNITY_EDITOR || NOESIS_API
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      #endif
      return ret;
    } 
  }

  public ItemContainerGenerator ItemContainerGenerator {
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.ItemsControl_ItemContainerGenerator_get(swigCPtr);
      ItemContainerGenerator ret = (cPtr == IntPtr.Zero) ? null : new ItemContainerGenerator(cPtr, false);
      #if UNITY_EDITOR || NOESIS_API
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      #endif
      return ret;
    } 
  }

  public Style ItemContainerStyle {
    set {
      NoesisGUI_PINVOKE.ItemsControl_ItemContainerStyle_set(swigCPtr, Style.getCPtr(value));
      #if UNITY_EDITOR || NOESIS_API
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      #endif
    } 
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.ItemsControl_ItemContainerStyle_get(swigCPtr);
      #if UNITY_EDITOR || NOESIS_API
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      #endif
      return (Style)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public ItemsPanelTemplate ItemsPanel {
    set {
      NoesisGUI_PINVOKE.ItemsControl_ItemsPanel_set(swigCPtr, ItemsPanelTemplate.getCPtr(value));
      #if UNITY_EDITOR || NOESIS_API
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      #endif
    } 
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.ItemsControl_ItemsPanel_get(swigCPtr);
      #if UNITY_EDITOR || NOESIS_API
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      #endif
      return (ItemsPanelTemplate)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public DataTemplate ItemTemplate {
    set {
      NoesisGUI_PINVOKE.ItemsControl_ItemTemplate_set(swigCPtr, DataTemplate.getCPtr(value));
      #if UNITY_EDITOR || NOESIS_API
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      #endif
    } 
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.ItemsControl_ItemTemplate_get(swigCPtr);
      #if UNITY_EDITOR || NOESIS_API
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      #endif
      return (DataTemplate)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public DataTemplateSelector ItemTemplateSelector {
    set {
      NoesisGUI_PINVOKE.ItemsControl_ItemTemplateSelector_set(swigCPtr, DataTemplateSelector.getCPtr(value));
      #if UNITY_EDITOR || NOESIS_API
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      #endif
    } 
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.ItemsControl_ItemTemplateSelector_get(swigCPtr);
      #if UNITY_EDITOR || NOESIS_API
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      #endif
      return (DataTemplateSelector)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public ItemCollection Items {
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.ItemsControl_Items_get(swigCPtr);
      #if UNITY_EDITOR || NOESIS_API
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      #endif
      return (ItemCollection)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  private object GetItemsSourceHelper() {
    IntPtr cPtr = NoesisGUI_PINVOKE.ItemsControl_GetItemsSourceHelper(swigCPtr);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return Noesis.Extend.GetProxy(cPtr, false);
  }

  private void SetItemsSourceHelper(object items) {
    NoesisGUI_PINVOKE.ItemsControl_SetItemsSourceHelper(swigCPtr, Noesis.Extend.GetInstanceHandle(items));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
  }

  new internal static IntPtr GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.ItemsControl_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }


  internal new static IntPtr Extend(string typeName) {
    IntPtr nativeType = NoesisGUI_PINVOKE.Extend_ItemsControl(Marshal.StringToHGlobalAnsi(typeName));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return nativeType;
  }
}

}

