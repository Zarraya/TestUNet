/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

namespace Noesis
{

public class Mouse : BaseComponent {
  internal new static Mouse CreateProxy(IntPtr cPtr, bool cMemoryOwn) {
    return new Mouse(cPtr, cMemoryOwn);
  }

  internal Mouse(IntPtr cPtr, bool cMemoryOwn) : base(cPtr, cMemoryOwn) {
  }

  internal static HandleRef getCPtr(Mouse obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  protected Mouse() {
  }

  public Pointi Position {
    get {
      Pointi pos;
      GetPositionValue(out pos);
      return pos;
    }
  }

  public static Point GetPosition(UIElement relativeTo) {
    IntPtr ret = NoesisGUI_PINVOKE.Mouse_GetPosition(UIElement.getCPtr(relativeTo));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    if (ret != IntPtr.Zero) {
      return Marshal.PtrToStructure<Point>(ret);
    }
    else {
      return new Point();
    }
  }

  public MouseButtonState GetButtonState(MouseButton button) {
    MouseButtonState ret = (MouseButtonState)NoesisGUI_PINVOKE.Mouse_GetButtonState(swigCPtr, (int)button);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public bool Capture(UIElement element, CaptureMode mode) {
    bool ret = NoesisGUI_PINVOKE.Mouse_Capture__SWIG_0(swigCPtr, UIElement.getCPtr(element), (int)mode);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public bool Capture(UIElement element) {
    bool ret = NoesisGUI_PINVOKE.Mouse_Capture__SWIG_1(swigCPtr, UIElement.getCPtr(element));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public UIElement Captured {
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.Mouse_Captured_get(swigCPtr);
      #if UNITY_EDITOR || NOESIS_API
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      #endif
      return (UIElement)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  private void GetPositionValue(out Pointi pos) {
    NoesisGUI_PINVOKE.Mouse_GetPositionValue(swigCPtr, out pos);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
  }

}

}

