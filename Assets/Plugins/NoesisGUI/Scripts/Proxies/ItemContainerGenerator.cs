/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

namespace Noesis
{

public class ItemContainerGenerator : BaseComponent, Noesis.IRecyclingItemContainerGenerator {
  internal new static ItemContainerGenerator CreateProxy(IntPtr cPtr, bool cMemoryOwn) {
    return new ItemContainerGenerator(cPtr, cMemoryOwn);
  }

  internal ItemContainerGenerator(IntPtr cPtr, bool cMemoryOwn) : base(cPtr, cMemoryOwn) {
  }

  internal static HandleRef getCPtr(ItemContainerGenerator obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  protected ItemContainerGenerator() {
  }

  ItemContainerGenerator IItemContainerGenerator.GetItemContainerGeneratorForPanel(Panel panel) {
    return GetItemContainerGeneratorForPanelHelper(panel);
  }

  IDisposable IItemContainerGenerator.StartAt(GeneratorPosition position, GeneratorDirection direction) {
    return ((IItemContainerGenerator)this).StartAt(position, direction, false);
  }

  IDisposable IItemContainerGenerator.StartAt(GeneratorPosition position, GeneratorDirection direction, bool allowStartAtRealizedItem) {
    StartAtHelper(position, direction, allowStartAtRealizedItem);
    return new Generator(this);
  }

  DependencyObject IItemContainerGenerator.GenerateNext() {
    return GenerateNextHelper();
  }

  DependencyObject IItemContainerGenerator.GenerateNext(out bool isNewlyRealized) {
    isNewlyRealized = false;
    return GenerateNextRealizedHelper(ref isNewlyRealized);
  }

  void IItemContainerGenerator.PrepareItemContainer(DependencyObject container) {
    PrepareItemContainerHelper(container);
  }

  void IItemContainerGenerator.RemoveAll() {
    RemoveAllHelper();
  }

  void IItemContainerGenerator.Remove(GeneratorPosition position, int count) {
    RemoveHelper(position, count);
  }

  GeneratorPosition IItemContainerGenerator.GeneratorPositionFromIndex(int itemIndex) {
    GeneratorPosition position = new GeneratorPosition();
    GeneratorPositionFromIndexHelper(itemIndex, ref position);
    return position;
  }

  int IItemContainerGenerator.IndexFromGeneratorPosition(GeneratorPosition position) {
    return IndexFromGeneratorPositionHelper(position);
  }

  void IRecyclingItemContainerGenerator.Recycle(GeneratorPosition position, int count) {
    RecycleHelper(position, count);
  }

  private struct Generator: System.IDisposable {

    internal Generator(ItemContainerGenerator generator) {
      _generator = generator;
    }

    void IDisposable.Dispose() {
      if (_generator != null) {
        _generator.StopHelper();
        _generator = null;
      }
      GC.SuppressFinalize(this);
    }

    ItemContainerGenerator _generator;
  }

  public DependencyObject ContainerFromIndex(int index) {
    IntPtr cPtr = NoesisGUI_PINVOKE.ItemContainerGenerator_ContainerFromIndex(swigCPtr, index);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return (DependencyObject)Noesis.Extend.GetProxy(cPtr, false);
  }

  public DependencyObject ContainerFromItem(object item) {
    IntPtr cPtr = NoesisGUI_PINVOKE.ItemContainerGenerator_ContainerFromItem(swigCPtr, Noesis.Extend.GetInstanceHandle(item));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return (DependencyObject)Noesis.Extend.GetProxy(cPtr, false);
  }

  public int IndexFromContainer(DependencyObject container) {
    int ret = NoesisGUI_PINVOKE.ItemContainerGenerator_IndexFromContainer(swigCPtr, DependencyObject.getCPtr(container));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public object ItemFromContainer(DependencyObject container) {
    IntPtr cPtr = NoesisGUI_PINVOKE.ItemContainerGenerator_ItemFromContainer(swigCPtr, DependencyObject.getCPtr(container));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return Noesis.Extend.GetProxy(cPtr, false);
  }

  public GeneratorStatus Status {
    get {
      GeneratorStatus ret = (GeneratorStatus)NoesisGUI_PINVOKE.ItemContainerGenerator_Status_get(swigCPtr);
      #if UNITY_EDITOR || NOESIS_API
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      #endif
      return ret;
    } 
  }

  private ItemContainerGenerator GetItemContainerGeneratorForPanelHelper(Panel panel) {
    IntPtr cPtr = NoesisGUI_PINVOKE.ItemContainerGenerator_GetItemContainerGeneratorForPanelHelper(swigCPtr, Panel.getCPtr(panel));
    ItemContainerGenerator ret = (cPtr == IntPtr.Zero) ? null : new ItemContainerGenerator(cPtr, false);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  private void GeneratorPositionFromIndexHelper(int itemIndex, ref GeneratorPosition position) {
    NoesisGUI_PINVOKE.ItemContainerGenerator_GeneratorPositionFromIndexHelper(swigCPtr, itemIndex, ref position);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
  }

  private int IndexFromGeneratorPositionHelper(GeneratorPosition position) {
    int ret = NoesisGUI_PINVOKE.ItemContainerGenerator_IndexFromGeneratorPositionHelper(swigCPtr, ref position);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  private void StartAtHelper(GeneratorPosition position, GeneratorDirection direction, bool allowStartAtRealizedItem) {
    NoesisGUI_PINVOKE.ItemContainerGenerator_StartAtHelper(swigCPtr, ref position, (int)direction, allowStartAtRealizedItem);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
  }

  private DependencyObject GenerateNextHelper() {
    IntPtr cPtr = NoesisGUI_PINVOKE.ItemContainerGenerator_GenerateNextHelper(swigCPtr);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return (DependencyObject)Noesis.Extend.GetProxy(cPtr, false);
  }

  private DependencyObject GenerateNextRealizedHelper(ref bool isNewlyRealized) {
    IntPtr cPtr = NoesisGUI_PINVOKE.ItemContainerGenerator_GenerateNextRealizedHelper(swigCPtr, ref isNewlyRealized);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return (DependencyObject)Noesis.Extend.GetProxy(cPtr, false);
  }

  private void StopHelper() {
    NoesisGUI_PINVOKE.ItemContainerGenerator_StopHelper(swigCPtr);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
  }

  private void PrepareItemContainerHelper(DependencyObject container) {
    NoesisGUI_PINVOKE.ItemContainerGenerator_PrepareItemContainerHelper(swigCPtr, DependencyObject.getCPtr(container));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
  }

  private void RemoveAllHelper() {
    NoesisGUI_PINVOKE.ItemContainerGenerator_RemoveAllHelper(swigCPtr);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
  }

  private void RemoveHelper(GeneratorPosition position, int count) {
    NoesisGUI_PINVOKE.ItemContainerGenerator_RemoveHelper(swigCPtr, ref position, count);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
  }

  private void RecycleHelper(GeneratorPosition position, int count) {
    NoesisGUI_PINVOKE.ItemContainerGenerator_RecycleHelper(swigCPtr, ref position, count);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
  }

  new internal static IntPtr GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.ItemContainerGenerator_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

}

}

