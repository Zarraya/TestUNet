/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

namespace Noesis
{

public class MouseButtonEventArgs : MouseEventArgs {
  private HandleRef swigCPtr;

  internal MouseButtonEventArgs(IntPtr cPtr, bool cMemoryOwn) : base(cPtr, cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(MouseButtonEventArgs obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~MouseButtonEventArgs() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          if (Noesis.Extend.Initialized) { NoesisGUI_PINVOKE.delete_MouseButtonEventArgs(swigCPtr);}
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public Noesis.MouseButtonState ButtonState {
    get {
      return GetButtonStateHelper();
    }
  }

  public Noesis.MouseButton ChangedButton {
    get {
      return GetChangedButtonHelper();
    }
  }

  public int ClickCount {
    get {
      return GetClickCountHelper();
    }
  }

  public MouseButtonEventArgs(object s, RoutedEvent e, MouseState mouseState, MouseButton button, MouseButtonState state, uint clicks) : this(NoesisGUI_PINVOKE.new_MouseButtonEventArgs(Noesis.Extend.GetInstanceHandle(s), RoutedEvent.getCPtr(e), MouseState.getCPtr(mouseState), (int)button, (int)state, clicks), true) {
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
  }

  private MouseButtonState GetButtonStateHelper() {
    MouseButtonState ret = (MouseButtonState)NoesisGUI_PINVOKE.MouseButtonEventArgs_GetButtonStateHelper(swigCPtr);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  private MouseButton GetChangedButtonHelper() {
    MouseButton ret = (MouseButton)NoesisGUI_PINVOKE.MouseButtonEventArgs_GetChangedButtonHelper(swigCPtr);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  private int GetClickCountHelper() {
    int ret = NoesisGUI_PINVOKE.MouseButtonEventArgs_GetClickCountHelper(swigCPtr);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

}

}

